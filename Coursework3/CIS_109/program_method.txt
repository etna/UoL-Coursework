Program methodology

1. Create the following 
	- customer class (to contain billing information and check input errors)
	- order class (to handle customer orders and check orders errors)
	- invoice class (to print customer order + billing + write copy of invoice 				 to text file)
	- file reader class (to read product inventory from text file)
	- end class (to prompt for addition users)

2. Create the following text files:
	- inventory text file (contains inventory detail) --> inventory.txt
	- add-on charges (contains VAT and shipping costs) --> addon.txt
	- invoice text file (for storing customer invoice) --> invoice.txt


How the program should worK:

1. Java should call the inventory text file at the beginning to display inventory info and price.

2. Customer class should be called to prompt for customer billing info input
	- exceptions should be caught if customer enters ridiculous values 
		- eg: text for postal code
		      numbers for name

3. If customer info passes, proceed to invoke order class

4. Order class should work exactly as it should it CW2 (including checking for >100 orders, wrong code, etc etc
	- Order class must be able to read code number from customer input and 		  compare it with text file product codes, how should this be done? 		  Specify which characters to use on inventory text file?
	- would be nice if we could have Order class print a list of products 		  ordered by customer before proceeding to print invoice
	- can we cut + paste order code from CW2 into order class?

5. Completion of order, invoice class should be invoked, customer order should be printed into invoice text file
	- include date and time stamp? Desirable
	- Formatting: how to get the invoice to be printed properly in text file?

6. Completion on printing, invoke end class and prompt user if others need to use the terminal
	- If user prints Y, y, YES, yes or Yes or YeS etc etc, program loops from 		  beginning (better to include inventory list as well)
	- If user enters N, n, NO, No, nO, program terminates with a TQVM message
	- Any other combination = capture exception and re-prompt until suitable 		  input issued.